[
  {
    "containingClass": {
      "isArray": false,
      "name": "StepFunction",
      "qualifiedName": "org.apache.commons.math3.analysis.function.StepFunction"
    },
    "isVarArgs": false,
    "name": "StepFunction",
    "paramTags": [
      {
        "comment": "Domain values where the function changes value.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "x",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "double",
              "qualifiedName": "double"
            },
            "isArray": true,
            "name": "double[]",
            "qualifiedName": "double[]"
          }
        }
      },
      {
        "comment": "Values of the function.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "y",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "double",
              "qualifiedName": "double"
            },
            "isArray": true,
            "name": "double[]",
            "qualifiedName": "double[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          },
          "isArray": true,
          "name": "double[]",
          "qualifiedName": "double[]"
        }
      },
      {
        "name": "y",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          },
          "isArray": true,
          "name": "double[]",
          "qualifiedName": "double[]"
        }
      }
    ],
    "signature": "StepFunction(double[] x,double[] y)",
    "targetClass": "org.apache.commons.math3.analysis.function.StepFunction",
    "throwsTags": [
      {
        "comment": "if the x array is not sorted in strictly increasing order.",
        "condition": "MathArrays.checkOrder(args[0])==false",
        "exception": {
          "isArray": false,
          "name": "NonMonotonicSequenceException",
          "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if x or y are null.",
        "condition": "args[0]==null || args[1]==null",
        "exception": {
          "isArray": false,
          "name": "NullArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if x or y are zero-length.",
        "condition": "args[0].length==0 || args[1].length==0",
        "exception": {
          "isArray": false,
          "name": "NoDataException",
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if x and y do not have the same length.",
        "condition": "((args[0].length) == (args[1].length)) == false",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "StepFunction",
      "qualifiedName": "org.apache.commons.math3.analysis.function.StepFunction"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "Point at which the function value should be computed.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "the value of the function.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "value(double x)",
    "targetClass": "org.apache.commons.math3.analysis.function.StepFunction",
    "throwsTags": [
      {
        "comment": "when the activated method itself can ascertain that a precondition, specified in the API expressed at the level of the activated method, has been violated. When Commons Math throws an IllegalArgumentException, it is usually the consequence of checking the actual parameters passed to the method.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  }
]