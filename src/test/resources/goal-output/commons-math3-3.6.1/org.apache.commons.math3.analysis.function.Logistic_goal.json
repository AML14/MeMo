[
  {
    "containingClass": {
      "isArray": false,
      "name": "Logistic",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logistic"
    },
    "isVarArgs": false,
    "name": "Logistic",
    "paramTags": [
      {
        "comment": "If b > 0, value of the function for x going towards +\u221e. If b < 0, value of the function for x going towards -\u221e.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "k",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Abscissa of maximum growth.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "m",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Growth rate.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "b",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Parameter that affects the position of the curve along the ordinate axis.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "If b > 0, value of the function for x going towards -\u221e. If b < 0, value of the function for x going towards +\u221e.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Parameter that affects near which asymptote the maximum growth occurs.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "n",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "k",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "m",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "b",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "q",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "a",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "n",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "Logistic(double k,double m,double b,double q,double a,double n)",
    "targetClass": "org.apache.commons.math3.analysis.function.Logistic",
    "throwsTags": [
      {
        "comment": "if n <= 0.",
        "condition": "args[5]<=0",
        "exception": {
          "isArray": false,
          "name": "NotStrictlyPositiveException",
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Logistic",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logistic"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "Point at which the function value should be computed.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "the value of the function.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "value(double x)",
    "targetClass": "org.apache.commons.math3.analysis.function.Logistic",
    "throwsTags": [
      {
        "comment": "when the activated method itself can ascertain that a precondition, specified in the API expressed at the level of the activated method, has been violated. When Commons Math throws an IllegalArgumentException, it is usually the consequence of checking the actual parameters passed to the method.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Logistic",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logistic"
    },
    "isVarArgs": false,
    "name": "derivative",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the derivative function",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "UnivariateFunction",
      "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
    },
    "signature": "derivative()",
    "targetClass": "org.apache.commons.math3.analysis.function.Logistic",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Logistic",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logistic"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "m - x.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "mMinusX",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "k.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "k",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "b.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "b",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "q.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "a.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "1 / n.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "oneOverN",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "mMinusX",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "k",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "b",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "q",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "a",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "oneOverN",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "the value of the function.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "value(double mMinusX,double k,double b,double q,double a,double oneOverN)",
    "targetClass": "org.apache.commons.math3.analysis.function.Logistic",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Logistic",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logistic"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "function input value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "t",
          "type": {
            "isArray": false,
            "name": "DerivativeStructure",
            "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "t",
        "type": {
          "isArray": false,
          "name": "DerivativeStructure",
          "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
        }
      }
    ],
    "returnTag": {
      "comment": "function result",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "DerivativeStructure",
      "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
    },
    "signature": "value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure t)",
    "targetClass": "org.apache.commons.math3.analysis.function.Logistic",
    "throwsTags": [
      {
        "comment": "if t is inconsistent with the function's free parameters or order",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  }
]