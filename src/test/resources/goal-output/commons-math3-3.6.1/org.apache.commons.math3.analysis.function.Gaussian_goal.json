[
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "Gaussian",
    "paramTags": [
      {
        "comment": "Normalization factor.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "norm",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Mean.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "mean",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Standard deviation.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "sigma",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "norm",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "mean",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "sigma",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "Gaussian(double norm,double mean,double sigma)",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": [
      {
        "comment": "if sigma <= 0.",
        "condition": "args[2]<=0",
        "exception": {
          "isArray": false,
          "name": "NotStrictlyPositiveException",
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "Gaussian",
    "paramTags": [
      {
        "comment": "Mean.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "mean",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Standard deviation.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "sigma",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "mean",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "sigma",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "Gaussian(double mean,double sigma)",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": [
      {
        "comment": "if sigma <= 0.",
        "condition": "args[1]<=0",
        "exception": {
          "isArray": false,
          "name": "NotStrictlyPositiveException",
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "Gaussian",
    "paramTags": [],
    "parameters": [],
    "signature": "Gaussian()",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "Point at which the function value should be computed.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "the value of the function.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "value(double x)",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": [
      {
        "comment": "when the activated method itself can ascertain that a precondition, specified in the API expressed at the level of the activated method, has been violated. When Commons Math throws an IllegalArgumentException, it is usually the consequence of checking the actual parameters passed to the method.",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "derivative",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the derivative function",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "UnivariateFunction",
      "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction"
    },
    "signature": "derivative()",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "x - mean.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "xMinusMean",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Normalization factor.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "norm",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "Inverse of twice the square of the standard deviation.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "i2s2",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "xMinusMean",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "norm",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "i2s2",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "the value of the Gaussian at x.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "double",
      "qualifiedName": "double"
    },
    "signature": "value(double xMinusMean,double norm,double i2s2)",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Gaussian",
      "qualifiedName": "org.apache.commons.math3.analysis.function.Gaussian"
    },
    "isVarArgs": false,
    "name": "value",
    "paramTags": [
      {
        "comment": "function input value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "t",
          "type": {
            "isArray": false,
            "name": "DerivativeStructure",
            "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "t",
        "type": {
          "isArray": false,
          "name": "DerivativeStructure",
          "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
        }
      }
    ],
    "returnTag": {
      "comment": "function result",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "DerivativeStructure",
      "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure"
    },
    "signature": "value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure t)",
    "targetClass": "org.apache.commons.math3.analysis.function.Gaussian",
    "throwsTags": [
      {
        "comment": "if t is inconsistent with the function's free parameters or order",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "DimensionMismatchException",
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException"
        },
        "kind": "@throws"
      }
    ]
  }
]