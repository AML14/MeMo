[
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "scalar part of the quaternion",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q0",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "first coordinate of the vectorial part of the quaternion",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q1",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "second coordinate of the vectorial part of the quaternion",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q2",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "third coordinate of the vectorial part of the quaternion",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "q3",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "if true, the coordinates are considered not to be normalized, a normalization preprocessing step is performed before using them",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "needsNormalization",
          "type": {
            "isArray": false,
            "name": "boolean",
            "qualifiedName": "boolean"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "q0",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "q1",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "q2",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "q3",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "needsNormalization",
        "type": {
          "isArray": false,
          "name": "boolean",
          "qualifiedName": "boolean"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.RealFieldElement q0,org.apache.commons.math3.RealFieldElement q1,org.apache.commons.math3.RealFieldElement q2,org.apache.commons.math3.RealFieldElement q3,boolean needsNormalization)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "axis around which to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "axis",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "rotation angle.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "angle",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "axis",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "angle",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D axis,org.apache.commons.math3.RealFieldElement angle)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the axis norm is zero",
        "condition": "args[0].getNorm().getReal()==0",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "axis around which to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "axis",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "rotation angle.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "angle",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "axis",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "angle",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D axis,org.apache.commons.math3.RealFieldElement angle,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the axis norm is zero",
        "condition": "args[0].getNorm().getReal()==0",
        "exception": {
          "isArray": false,
          "name": "MathIllegalArgumentException",
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "rotation matrix",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "m",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[][]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
          }
        }
      },
      {
        "comment": "convergence threshold for the iterative orthogonality correction (convergence is reached when the difference between two steps of the Frobenius norm of the correction is below this threshold)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "threshold",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "m",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[][]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
        }
      },
      {
        "name": "threshold",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.RealFieldElement[][] m,double threshold)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the matrix is not a 3X3 matrix, or if it cannot be transformed into an orthogonal matrix with the given threshold, or if the determinant of the resulting orthogonal matrix is negative",
        "condition": "(args[0].length != 3) || (args[0][0].length != 3) || (args[0][1].length != 3) || (args[0][2].length != 3)",
        "exception": {
          "isArray": false,
          "name": "NotARotationMatrixException",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "first vector of the origin pair",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u1",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "second vector of the origin pair",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u2",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "desired image of u1 by the rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v1",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "desired image of u2 by the rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v2",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u1",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "u2",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "v1",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "v2",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u2,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D v1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D v2)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the norm of one of the vectors is zero, or if one of the pair is degenerated (i.e. the vectors of the pair are collinear)",
        "condition": "args[0].getNorm().getReal()==0 || args[1].getNorm().getReal()==0 || args[2].getNorm().getReal()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "origin vector",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      },
      {
        "comment": "desired image of u by the rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "v",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      },
      {
        "name": "v",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D v)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the norm of one of the vectors is zero",
        "condition": "args[0].getNorm().getReal()==0 || args[1].getNorm().getReal()==0",
        "exception": {
          "isArray": false,
          "name": "MathArithmeticException",
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "order of rotations to use",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "order",
          "type": {
            "isArray": false,
            "name": "RotationOrder",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
          }
        }
      },
      {
        "comment": "angle of the first elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha1",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "angle of the second elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha2",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "angle of the third elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha3",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "order",
        "type": {
          "isArray": false,
          "name": "RotationOrder",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
        }
      },
      {
        "name": "alpha1",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "alpha2",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "alpha3",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order,org.apache.commons.math3.RealFieldElement alpha1,org.apache.commons.math3.RealFieldElement alpha2,org.apache.commons.math3.RealFieldElement alpha3)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "FieldRotation",
    "paramTags": [
      {
        "comment": "order of rotations to compose, from left to right (i.e. we will use r1.compose(r2.compose(r3, convention), convention))",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "order",
          "type": {
            "isArray": false,
            "name": "RotationOrder",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      },
      {
        "comment": "angle of the first elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha1",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "angle of the second elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha2",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "angle of the third elementary rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "alpha3",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "order",
        "type": {
          "isArray": false,
          "name": "RotationOrder",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      },
      {
        "name": "alpha1",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "alpha2",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "alpha3",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      }
    ],
    "signature": "FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention,org.apache.commons.math3.RealFieldElement alpha1,org.apache.commons.math3.RealFieldElement alpha2,org.apache.commons.math3.RealFieldElement alpha3)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "mat2quat",
    "paramTags": [
      {
        "comment": "orthogonal rotation matrix",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "ort",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[][]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "ort",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[][]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
        }
      }
    ],
    "returnTag": {
      "comment": "quaternion corresponding to the matrix",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[]",
      "qualifiedName": "T[]"
    },
    "signature": "mat2quat(org.apache.commons.math3.RealFieldElement[][] ort)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "revert",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a new rotation whose effect is the reverse of the effect of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "revert()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getQ0",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "scalar coordinate of the quaternion",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getQ0()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getQ1",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "first coordinate of the vectorial part of the quaternion",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getQ1()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getQ2",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "second coordinate of the vectorial part of the quaternion",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getQ2()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getQ3",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "third coordinate of the vectorial part of the quaternion",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getQ3()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getAxis",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "normalized axis of the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "getAxis()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getAxis",
    "paramTags": [
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "normalized axis of the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getAngle",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "angle of the rotation (between 0 and \u03c0)",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "getAngle()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getAngles",
    "paramTags": [
      {
        "comment": "rotation order to use",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "order",
          "type": {
            "isArray": false,
            "name": "RotationOrder",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "order",
        "type": {
          "isArray": false,
          "name": "RotationOrder",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
        }
      }
    ],
    "returnTag": {
      "comment": "an array of three angles, in the order specified by the set",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[]",
      "qualifiedName": "T[]"
    },
    "signature": "getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the rotation is singular with respect to the angles set specified",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "CardanEulerSingularityException",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getAngles",
    "paramTags": [
      {
        "comment": "rotation order to use",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "order",
          "type": {
            "isArray": false,
            "name": "RotationOrder",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "order",
        "type": {
          "isArray": false,
          "name": "RotationOrder",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationOrder"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "an array of three angles, in the order specified by the set",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[]",
      "qualifiedName": "T[]"
    },
    "signature": "getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the rotation is singular with respect to the angles set specified",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "CardanEulerSingularityException",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "buildArray",
    "paramTags": [
      {
        "comment": "first array element",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a0",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "second array element",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a1",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      },
      {
        "comment": "third array element",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a2",
          "type": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "a0",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "a1",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      },
      {
        "name": "a2",
        "type": {
          "isArray": false,
          "name": "RealFieldElement",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement"
        }
      }
    ],
    "returnTag": {
      "comment": "new array",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[]",
      "qualifiedName": "T[]"
    },
    "signature": "buildArray(org.apache.commons.math3.RealFieldElement a0,org.apache.commons.math3.RealFieldElement a1,org.apache.commons.math3.RealFieldElement a2)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "vector",
    "paramTags": [
      {
        "comment": "abscissa",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "x",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "ordinate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "y",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      },
      {
        "comment": "height",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "z",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "x",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "y",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      },
      {
        "name": "z",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "a constant vector",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "vector(double x,double y,double z)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "getMatrix",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "the matrix corresponding to the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[][]",
      "qualifiedName": "T[][]"
    },
    "signature": "getMatrix()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "toRotation",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a constant vector",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Rotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
    },
    "signature": "toRotation()",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "vector to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which is the image of u by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "vector to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which is the image of u by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "an array with three items which stores vector to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "in",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      },
      {
        "comment": "an array with three items to put result to (it can be the same array as in)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "out",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "in",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      },
      {
        "name": "out",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "applyTo(org.apache.commons.math3.RealFieldElement[] in,org.apache.commons.math3.RealFieldElement[] out)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "an array with three items which stores vector to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "in",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "double",
              "qualifiedName": "double"
            },
            "isArray": true,
            "name": "double[]",
            "qualifiedName": "double[]"
          }
        }
      },
      {
        "comment": "an array with three items to put result to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "out",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "in",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          },
          "isArray": true,
          "name": "double[]",
          "qualifiedName": "double[]"
        }
      },
      {
        "name": "out",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "applyTo(double[] in,org.apache.commons.math3.RealFieldElement[] out)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "rotation to apply",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "vector to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which is the image of u by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "vector to apply the inverse of the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which such that u is its image by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "vector to apply the inverse of the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "Vector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "Vector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which such that u is its image by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "an array with three items which stores vector to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "in",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      },
      {
        "comment": "an array with three items to put result to (it can be the same array as in)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "out",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "in",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      },
      {
        "name": "out",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.RealFieldElement[] in,org.apache.commons.math3.RealFieldElement[] out)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "an array with three items which stores vector to rotate",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "in",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "double",
              "qualifiedName": "double"
            },
            "isArray": true,
            "name": "double[]",
            "qualifiedName": "double[]"
          }
        }
      },
      {
        "comment": "an array with three items to put result to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "out",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "in",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          },
          "isArray": true,
          "name": "double[]",
          "qualifiedName": "double[]"
        }
      },
      {
        "name": "out",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "applyInverseTo(double[] in,org.apache.commons.math3.RealFieldElement[] out)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "rotation to apply",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "vector to apply the inverse of the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "u",
          "type": {
            "isArray": false,
            "name": "FieldVector3D",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "u",
        "type": {
          "isArray": false,
          "name": "FieldVector3D",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
        }
      }
    ],
    "returnTag": {
      "comment": "a new vector which such that u is its image by the rotation",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldVector3D",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D u)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "compose",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInternal",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance using vector operator convention",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "compose",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation r,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInternal",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance using vector operator convention",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyTo",
    "paramTags": [
      {
        "comment": "rotation to apply",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r1",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "rInner",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r1",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "rInner",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r1,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation rInner)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInverse",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInverse(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInverseInternal",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance using vector operator convention",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInverse",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "convention to use for the semantics of the angle",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "convention",
          "type": {
            "isArray": false,
            "name": "RotationConvention",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "convention",
        "type": {
          "isArray": false,
          "name": "RotationConvention",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.RotationConvention"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation r,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "composeInverseInternal",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance using vector operator convention",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "composeInverseInternal(org.apache.commons.math3.geometry.euclidean.threed.Rotation r)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "applyInverseTo",
    "paramTags": [
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "rOuter",
          "type": {
            "isArray": false,
            "name": "Rotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
          }
        }
      },
      {
        "comment": "rotation to apply the rotation to",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "rInner",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "rOuter",
        "type": {
          "isArray": false,
          "name": "Rotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Rotation"
        }
      },
      {
        "name": "rInner",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "a new rotation which is the composition of r by the inverse of the instance",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "signature": "applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation rOuter,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation rInner)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "orthogonalizeMatrix",
    "paramTags": [
      {
        "comment": "initial matrix (not exactly orthogonal)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "m",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "RealFieldElement",
              "qualifiedName": "org.apache.commons.math3.RealFieldElement"
            },
            "isArray": true,
            "name": "RealFieldElement[][]",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
          }
        }
      },
      {
        "comment": "convergence threshold for the iterative orthogonality correction (convergence is reached when the difference between two steps of the Frobenius norm of the correction is below this threshold)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "threshold",
          "type": {
            "isArray": false,
            "name": "double",
            "qualifiedName": "double"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "m",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "RealFieldElement",
            "qualifiedName": "org.apache.commons.math3.RealFieldElement"
          },
          "isArray": true,
          "name": "RealFieldElement[][]",
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[][]"
        }
      },
      {
        "name": "threshold",
        "type": {
          "isArray": false,
          "name": "double",
          "qualifiedName": "double"
        }
      }
    ],
    "returnTag": {
      "comment": "an orthogonal matrix close to m",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "T",
        "qualifiedName": "T"
      },
      "isArray": true,
      "name": "T[][]",
      "qualifiedName": "T[][]"
    },
    "signature": "orthogonalizeMatrix(org.apache.commons.math3.RealFieldElement[][] m,double threshold)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": [
      {
        "comment": "if the matrix cannot be orthogonalized with the given threshold after 10 iterations",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "NotARotationMatrixException",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "FieldRotation",
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
    },
    "isVarArgs": false,
    "name": "distance",
    "paramTags": [
      {
        "comment": "first rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r1",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      },
      {
        "comment": "second rotation",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "r2",
          "type": {
            "isArray": false,
            "name": "FieldRotation",
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "r1",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      },
      {
        "name": "r2",
        "type": {
          "isArray": false,
          "name": "FieldRotation",
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation"
        }
      }
    ],
    "returnTag": {
      "comment": "distance between r1 and r2",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "T",
      "qualifiedName": "T"
    },
    "signature": "distance(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r1,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation r2)",
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.FieldRotation",
    "throwsTags": []
  }
]