[
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "CacheLoader",
    "paramTags": [],
    "parameters": [],
    "signature": "CacheLoader()",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "load",
    "paramTags": [
      {
        "comment": "the non-null key whose value should be loaded",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "key",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "key",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "the value associated with key; must not be null",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "V",
      "qualifiedName": "V"
    },
    "signature": "load(java.lang.Object key)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": [
      {
        "codeTags": [],
        "comment": "if unable to load the result",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "Exception",
          "qualifiedName": "java.lang.Exception"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "InterruptedException",
          "Exception"
        ],
        "comment": "if this method is interrupted. InterruptedException is treated like any other Exception in all respects except that, when it is caught, the thread's interrupt status is set",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "InterruptedException",
          "qualifiedName": "java.lang.InterruptedException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "reload",
    "paramTags": [
      {
        "comment": "the non-null key whose value should be loaded",
        "condition": "(args[0]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "key",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      },
      {
        "comment": "the non-null old value corresponding to key",
        "condition": "(args[1]==null) == false",
        "kind": "PARAM",
        "parameter": {
          "name": "oldValue",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "key",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "oldValue",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "the future new value associated with key; must not be null, must not return null",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "ListenableFuture",
      "qualifiedName": "com.google.common.util.concurrent.ListenableFuture"
    },
    "signature": "reload(java.lang.Object key,java.lang.Object oldValue)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": [
      {
        "codeTags": [],
        "comment": "if unable to reload the result",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "Exception",
          "qualifiedName": "java.lang.Exception"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "InterruptedException",
          "Exception"
        ],
        "comment": "if this method is interrupted. InterruptedException is treated like any other Exception in all respects except that, when it is caught, the thread's interrupt status is set",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "InterruptedException",
          "qualifiedName": "java.lang.InterruptedException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "loadAll",
    "paramTags": [
      {
        "comment": "the unique, non-null keys whose values should be loaded",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "keys",
          "type": {
            "isArray": false,
            "name": "Iterable",
            "qualifiedName": "java.lang.Iterable"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "keys",
        "type": {
          "isArray": false,
          "name": "Iterable",
          "qualifiedName": "java.lang.Iterable"
        }
      }
    ],
    "returnTag": {
      "comment": "a map from each key in keys to the value associated with that key; may not contain null values",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Map",
      "qualifiedName": "java.util.Map"
    },
    "signature": "loadAll(java.lang.Iterable keys)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": [
      {
        "codeTags": [],
        "comment": "if unable to load the result",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "Exception",
          "qualifiedName": "java.lang.Exception"
        },
        "kind": "THROWS"
      },
      {
        "codeTags": [
          "InterruptedException",
          "Exception"
        ],
        "comment": "if this method is interrupted. InterruptedException is treated like any other Exception in all respects except that, when it is caught, the thread's interrupt status is set",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "InterruptedException",
          "qualifiedName": "java.lang.InterruptedException"
        },
        "kind": "THROWS"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "from",
    "paramTags": [
      {
        "comment": "the function to be used for loading values; must never return null",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "function",
          "type": {
            "isArray": false,
            "name": "Function",
            "qualifiedName": "com.google.common.base.Function"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "function",
        "type": {
          "isArray": false,
          "name": "Function",
          "qualifiedName": "com.google.common.base.Function"
        }
      }
    ],
    "returnTag": {
      "comment": "a cache loader that loads values by passing each key to function",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "signature": "from(com.google.common.base.Function function)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "from",
    "paramTags": [
      {
        "comment": "the supplier to be used for loading values; must never return null",
        "condition": "",
        "kind": "PARAM",
        "parameter": {
          "name": "supplier",
          "type": {
            "isArray": false,
            "name": "Supplier",
            "qualifiedName": "com.google.common.base.Supplier"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "supplier",
        "type": {
          "isArray": false,
          "name": "Supplier",
          "qualifiedName": "com.google.common.base.Supplier"
        }
      }
    ],
    "returnTag": {
      "comment": "a cache loader that loads values by calling Supplier.get(), irrespective of the key",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "signature": "from(com.google.common.base.Supplier supplier)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "isVarArgs": false,
    "name": "asyncReloading",
    "paramTags": [],
    "parameters": [
      {
        "name": "loader",
        "type": {
          "isArray": false,
          "name": "CacheLoader",
          "qualifiedName": "com.google.common.cache.CacheLoader"
        }
      },
      {
        "name": "executor",
        "type": {
          "isArray": false,
          "name": "Executor",
          "qualifiedName": "java.util.concurrent.Executor"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "CacheLoader",
      "qualifiedName": "com.google.common.cache.CacheLoader"
    },
    "signature": "asyncReloading(com.google.common.cache.CacheLoader loader,java.util.concurrent.Executor executor)",
    "targetClass": "com.google.common.cache.CacheLoader",
    "throwsTags": []
  }
]