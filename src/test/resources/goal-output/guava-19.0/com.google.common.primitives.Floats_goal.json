[
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "Floats",
    "paramTags": [],
    "parameters": [],
    "signature": "Floats()",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "hashCode",
    "paramTags": [
      {
        "comment": "a primitive float value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "value",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "value",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnTag": {
      "comment": "a hash code for the value",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "hashCode(float value)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "compare",
    "paramTags": [
      {
        "comment": "the first float to compare",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "a",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      },
      {
        "comment": "the second float to compare",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "b",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "a",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "b",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnTag": {
      "comment": "the result of invoking Float.compare(float, float)",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "compare(float a,float b)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "isFinite",
    "paramTags": [],
    "parameters": [
      {
        "name": "value",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "isFinite(float value)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "contains",
    "paramTags": [
      {
        "comment": "an array of float values, possibly empty",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      },
      {
        "comment": "a primitive float value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "target",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnTag": {
      "comment": "true if array[i] == target for some value of i",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "contains(float[] array,float target)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "indexOf",
    "paramTags": [
      {
        "comment": "an array of float values, possibly empty",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      },
      {
        "comment": "a primitive float value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "target",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnTag": {
      "comment": "the least index i for which array[i] == target, or -1 if no such index exists.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "indexOf(float[] array,float target)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "indexOf",
    "paramTags": [],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "indexOf(float[] array,float target,int start,int end)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "indexOf",
    "paramTags": [
      {
        "comment": "the array to search for the sequence target",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      },
      {
        "comment": "the array to search for as a sub-sequence of array",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "target",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "indexOf(float[] array,float[] target)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "lastIndexOf",
    "paramTags": [
      {
        "comment": "an array of float values, possibly empty",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      },
      {
        "comment": "a primitive float value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "target",
          "type": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      }
    ],
    "returnTag": {
      "comment": "the greatest index i for which array[i] == target, or -1 if no such index exists.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "lastIndexOf(float[] array,float target)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "lastIndexOf",
    "paramTags": [],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "target",
        "type": {
          "isArray": false,
          "name": "float",
          "qualifiedName": "float"
        }
      },
      {
        "name": "start",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "end",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "int",
      "qualifiedName": "int"
    },
    "signature": "lastIndexOf(float[] array,float target,int start,int end)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": true,
    "name": "min",
    "paramTags": [
      {
        "comment": "a nonempty array of float values",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      }
    ],
    "returnTag": {
      "comment": "the value present in array that is less than or equal to every other value in the array",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "float",
      "qualifiedName": "float"
    },
    "signature": "min(float[] array)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": [
      {
        "comment": "if array is empty",
        "condition": "args[0].length==0",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": true,
    "name": "max",
    "paramTags": [
      {
        "comment": "a nonempty array of float values",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      }
    ],
    "returnTag": {
      "comment": "the value present in array that is greater than or equal to every other value in the array",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "float",
      "qualifiedName": "float"
    },
    "signature": "max(float[] array)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": [
      {
        "comment": "if array is empty",
        "condition": "args[0].length==0",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": true,
    "name": "concat",
    "paramTags": [
      {
        "comment": "zero or more float arrays",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "arrays",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[][]",
            "qualifiedName": "float[][]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "arrays",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[][]",
          "qualifiedName": "float[][]"
        }
      }
    ],
    "returnTag": {
      "comment": "a single array containing all the values from the source arrays, in order",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "float",
        "qualifiedName": "float"
      },
      "isArray": true,
      "name": "float[]",
      "qualifiedName": "float[]"
    },
    "signature": "concat(float[][] arrays)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "stringConverter",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "Converter",
      "qualifiedName": "com.google.common.base.Converter"
    },
    "signature": "stringConverter()",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "ensureCapacity",
    "paramTags": [
      {
        "comment": "the source array",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      },
      {
        "comment": "the minimum length the returned array must guarantee",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "minLength",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "an extra amount to \"grow\" the array by if growth is necessary",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "padding",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "minLength",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "padding",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnTag": {
      "comment": "an array containing the values of array, with guaranteed minimum length minLength",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "float",
        "qualifiedName": "float"
      },
      "isArray": true,
      "name": "float[]",
      "qualifiedName": "float[]"
    },
    "signature": "ensureCapacity(float[] array,int minLength,int padding)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": [
      {
        "comment": "if minLength or padding is negative",
        "condition": "args[1]<0 || args[2]<0",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "copyOf",
    "paramTags": [],
    "parameters": [
      {
        "name": "original",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      },
      {
        "name": "length",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "float",
        "qualifiedName": "float"
      },
      "isArray": true,
      "name": "float[]",
      "qualifiedName": "float[]"
    },
    "signature": "copyOf(float[] original,int length)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": true,
    "name": "join",
    "paramTags": [
      {
        "comment": "the text that should appear between consecutive values in the resulting string (but not at the start or end)",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "separator",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      },
      {
        "comment": "an array of float values, possibly empty",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "array",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "separator",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      },
      {
        "name": "array",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "String",
      "qualifiedName": "java.lang.String"
    },
    "signature": "join(java.lang.String separator,float[] array)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "lexicographicalComparator",
    "paramTags": [],
    "parameters": [],
    "returnType": {
      "isArray": false,
      "name": "Comparator",
      "qualifiedName": "java.util.Comparator"
    },
    "signature": "lexicographicalComparator()",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "toArray",
    "paramTags": [
      {
        "comment": "a collection of Number instances",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "collection",
          "type": {
            "isArray": false,
            "name": "Collection",
            "qualifiedName": "java.util.Collection"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "collection",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      }
    ],
    "returnTag": {
      "comment": "an array containing the same values as collection, in the same order, converted to primitives",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "float",
        "qualifiedName": "float"
      },
      "isArray": true,
      "name": "float[]",
      "qualifiedName": "float[]"
    },
    "signature": "toArray(java.util.Collection collection)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": [
      {
        "comment": "if collection or any of its elements is null",
        "condition": "args[0]==null || args[0].contains(null)",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": true,
    "name": "asList",
    "paramTags": [
      {
        "comment": "the array to back the list",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "backingArray",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "float",
              "qualifiedName": "float"
            },
            "isArray": true,
            "name": "float[]",
            "qualifiedName": "float[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "backingArray",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "float",
            "qualifiedName": "float"
          },
          "isArray": true,
          "name": "float[]",
          "qualifiedName": "float[]"
        }
      }
    ],
    "returnTag": {
      "comment": "a list view of the array",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "asList(float[] backingArray)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "Floats",
      "qualifiedName": "com.google.common.primitives.Floats"
    },
    "isVarArgs": false,
    "name": "tryParse",
    "paramTags": [
      {
        "comment": "the string representation of a float value",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "string",
          "type": {
            "isArray": false,
            "name": "String",
            "qualifiedName": "java.lang.String"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "string",
        "type": {
          "isArray": false,
          "name": "String",
          "qualifiedName": "java.lang.String"
        }
      }
    ],
    "returnTag": {
      "comment": "the floating point value represented by string, or null if string has a length of zero or cannot be parsed as a float value",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Float",
      "qualifiedName": "java.lang.Float"
    },
    "signature": "tryParse(java.lang.String string)",
    "targetClass": "com.google.common.primitives.Floats",
    "throwsTags": []
  }
]