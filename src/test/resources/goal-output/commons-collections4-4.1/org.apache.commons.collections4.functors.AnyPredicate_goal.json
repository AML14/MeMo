[
  {
    "containingClass": {
      "isArray": false,
      "name": "AnyPredicate",
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate"
    },
    "isVarArgs": true,
    "name": "AnyPredicate",
    "paramTags": [
      {
        "comment": "the predicates to check, not cloned, not null",
        "condition": "(args[0]==null) == false",
        "kind": "@param",
        "parameter": {
          "name": "predicates",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "Predicate",
              "qualifiedName": "org.apache.commons.collections4.Predicate"
            },
            "isArray": true,
            "name": "Predicate[]",
            "qualifiedName": "org.apache.commons.collections4.Predicate[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "predicates",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "Predicate",
            "qualifiedName": "org.apache.commons.collections4.Predicate"
          },
          "isArray": true,
          "name": "Predicate[]",
          "qualifiedName": "org.apache.commons.collections4.Predicate[]"
        }
      }
    ],
    "signature": "AnyPredicate(org.apache.commons.collections4.Predicate[] predicates)",
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "AnyPredicate",
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate"
    },
    "isVarArgs": true,
    "name": "anyPredicate",
    "paramTags": [
      {
        "comment": "the predicates to check, cloned, not null",
        "condition": "(args[0]==null) == false",
        "kind": "@param",
        "parameter": {
          "name": "predicates",
          "type": {
            "componentType": {
              "isArray": false,
              "name": "Predicate",
              "qualifiedName": "org.apache.commons.collections4.Predicate"
            },
            "isArray": true,
            "name": "Predicate[]",
            "qualifiedName": "org.apache.commons.collections4.Predicate[]"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "predicates",
        "type": {
          "componentType": {
            "isArray": false,
            "name": "Predicate",
            "qualifiedName": "org.apache.commons.collections4.Predicate"
          },
          "isArray": true,
          "name": "Predicate[]",
          "qualifiedName": "org.apache.commons.collections4.Predicate[]"
        }
      }
    ],
    "returnTag": {
      "comment": "the any predicate",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Predicate",
      "qualifiedName": "org.apache.commons.collections4.Predicate"
    },
    "signature": "anyPredicate(org.apache.commons.collections4.Predicate[] predicates)",
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "throwsTags": [
      {
        "comment": "if the predicates array is null",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if any predicate in the array is null",
        "condition": "java.util.Arrays.stream(args[0]).anyMatch(e -> e==null)",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "AnyPredicate",
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate"
    },
    "isVarArgs": false,
    "name": "anyPredicate",
    "paramTags": [
      {
        "comment": "the predicates to check, cloned, not null",
        "condition": "(args[0]==null) == false",
        "kind": "@param",
        "parameter": {
          "name": "predicates",
          "type": {
            "isArray": false,
            "name": "Collection",
            "qualifiedName": "java.util.Collection"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "predicates",
        "type": {
          "isArray": false,
          "name": "Collection",
          "qualifiedName": "java.util.Collection"
        }
      }
    ],
    "returnTag": {
      "comment": "the all predicate",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "Predicate",
      "qualifiedName": "org.apache.commons.collections4.Predicate"
    },
    "signature": "anyPredicate(java.util.Collection predicates)",
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "throwsTags": [
      {
        "comment": "if the predicates array is null",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if any predicate in the array is null",
        "condition": "args[0].stream().anyMatch(e -> e==null)",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "AnyPredicate",
      "qualifiedName": "org.apache.commons.collections4.functors.AnyPredicate"
    },
    "isVarArgs": false,
    "name": "evaluate",
    "paramTags": [
      {
        "comment": "the input object",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "object",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "object",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "true if any decorated predicate return true",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "boolean",
      "qualifiedName": "boolean"
    },
    "signature": "evaluate(java.lang.Object object)",
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "throwsTags": [
      {
        "comment": "(runtime) if the input is the wrong class",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "ClassCastException",
          "qualifiedName": "java.lang.ClassCastException"
        },
        "kind": "@throws"
      },
      {
        "comment": "(runtime) if the input is invalid",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      },
      {
        "comment": "(runtime) if the predicate encounters a problem",
        "condition": "",
        "exception": {
          "isArray": false,
          "name": "FunctorException",
          "qualifiedName": "org.apache.commons.collections4.FunctorException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "AbstractQuantifierPredicate",
      "qualifiedName": "org.apache.commons.collections4.functors.AbstractQuantifierPredicate"
    },
    "isVarArgs": false,
    "name": "getPredicates",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "a copy of the predicates",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "componentType": {
        "isArray": false,
        "name": "Predicate",
        "qualifiedName": "org.apache.commons.collections4.Predicate"
      },
      "isArray": true,
      "name": "Predicate[]",
      "qualifiedName": "org.apache.commons.collections4.Predicate[]"
    },
    "signature": "getPredicates()",
    "targetClass": "org.apache.commons.collections4.functors.AnyPredicate",
    "throwsTags": []
  }
]