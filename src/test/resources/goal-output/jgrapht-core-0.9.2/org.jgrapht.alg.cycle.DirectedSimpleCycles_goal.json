[
  {
    "containingClass": {
      "isArray": false,
      "name": "DirectedSimpleCycles",
      "qualifiedName": "org.jgrapht.alg.cycle.DirectedSimpleCycles"
    },
    "isVarArgs": false,
    "name": "getGraph",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The graph.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "DirectedGraph",
      "qualifiedName": "org.jgrapht.DirectedGraph"
    },
    "signature": "getGraph()",
    "targetClass": "org.jgrapht.alg.cycle.DirectedSimpleCycles",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "DirectedSimpleCycles",
      "qualifiedName": "org.jgrapht.alg.cycle.DirectedSimpleCycles"
    },
    "isVarArgs": false,
    "name": "setGraph",
    "paramTags": [
      {
        "comment": "the graph.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "graph",
          "type": {
            "isArray": false,
            "name": "DirectedGraph",
            "qualifiedName": "org.jgrapht.DirectedGraph"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "graph",
        "type": {
          "isArray": false,
          "name": "DirectedGraph",
          "qualifiedName": "org.jgrapht.DirectedGraph"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "setGraph(org.jgrapht.DirectedGraph graph)",
    "targetClass": "org.jgrapht.alg.cycle.DirectedSimpleCycles",
    "throwsTags": [
      {
        "comment": "if the argument is null.",
        "condition": "args[0]==null",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "DirectedSimpleCycles",
      "qualifiedName": "org.jgrapht.alg.cycle.DirectedSimpleCycles"
    },
    "isVarArgs": false,
    "name": "findSimpleCycles",
    "paramTags": [],
    "parameters": [],
    "returnTag": {
      "comment": "The list of all simple cycles. Possibly empty but never null.",
      "condition": "true ? (result==null)==false",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "findSimpleCycles()",
    "targetClass": "org.jgrapht.alg.cycle.DirectedSimpleCycles",
    "throwsTags": [
      {
        "comment": "if the current graph is null.",
        "condition": "target.getGraph()==null",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  }
]
