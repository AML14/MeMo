[
  {
    "containingClass": {
      "isArray": false,
      "name": "KShortestPaths",
      "qualifiedName": "org.jgrapht.alg.KShortestPaths"
    },
    "isVarArgs": false,
    "name": "KShortestPaths",
    "paramTags": [
      {
        "comment": "",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "graph",
          "type": {
            "isArray": false,
            "name": "Graph",
            "qualifiedName": "org.jgrapht.Graph"
          }
        }
      },
      {
        "comment": "",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "startVertex",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      },
      {
        "comment": "number of paths to be computed.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "k",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "graph",
        "type": {
          "isArray": false,
          "name": "Graph",
          "qualifiedName": "org.jgrapht.Graph"
        }
      },
      {
        "name": "startVertex",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "k",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "signature": "KShortestPaths(org.jgrapht.Graph graph,java.lang.Object startVertex,int k)",
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "KShortestPaths",
      "qualifiedName": "org.jgrapht.alg.KShortestPaths"
    },
    "isVarArgs": false,
    "name": "KShortestPaths",
    "paramTags": [
      {
        "comment": "graph on which shortest paths are searched.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "graph",
          "type": {
            "isArray": false,
            "name": "Graph",
            "qualifiedName": "org.jgrapht.Graph"
          }
        }
      },
      {
        "comment": "start vertex of the calculated paths.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "startVertex",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      },
      {
        "comment": "number of ranking paths between the start vertex and an end vertex.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "nPaths",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      },
      {
        "comment": "maximum number of edges of the calculated paths.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "nMaxHops",
          "type": {
            "isArray": false,
            "name": "int",
            "qualifiedName": "int"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "graph",
        "type": {
          "isArray": false,
          "name": "Graph",
          "qualifiedName": "org.jgrapht.Graph"
        }
      },
      {
        "name": "startVertex",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "nPaths",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "nMaxHops",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "signature": "KShortestPaths(org.jgrapht.Graph graph,java.lang.Object startVertex,int nPaths,int nMaxHops)",
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "throwsTags": [
      {
        "comment": "if the specified graph or startVertex is null.",
        "condition": "args[0]==null || args[1]==null",
        "exception": {
          "isArray": false,
          "name": "NullPointerException",
          "qualifiedName": "java.lang.NullPointerException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if nPaths is negative or 0.",
        "condition": "args[2]<0 || args[2]==0",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      },
      {
        "comment": "if nMaxHops is negative or 0.",
        "condition": "args[3]<0 || args[3]==0",
        "exception": {
          "isArray": false,
          "name": "IllegalArgumentException",
          "qualifiedName": "java.lang.IllegalArgumentException"
        },
        "kind": "@throws"
      }
    ]
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "KShortestPaths",
      "qualifiedName": "org.jgrapht.alg.KShortestPaths"
    },
    "isVarArgs": false,
    "name": "getPaths",
    "paramTags": [
      {
        "comment": "target vertex of the calculated paths.",
        "condition": "",
        "kind": "@param",
        "parameter": {
          "name": "endVertex",
          "type": {
            "isArray": false,
            "name": "Object",
            "qualifiedName": "java.lang.Object"
          }
        }
      }
    ],
    "parameters": [
      {
        "name": "endVertex",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnTag": {
      "comment": "list of paths, or null if no path exists between the start vertex and the end vertex.",
      "condition": "",
      "kind": "RETURN"
    },
    "returnType": {
      "isArray": false,
      "name": "List",
      "qualifiedName": "java.util.List"
    },
    "signature": "getPaths(java.lang.Object endVertex)",
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "KShortestPaths",
      "qualifiedName": "org.jgrapht.alg.KShortestPaths"
    },
    "isVarArgs": false,
    "name": "assertGetPaths",
    "paramTags": [],
    "parameters": [
      {
        "name": "endVertex",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "assertGetPaths(java.lang.Object endVertex)",
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "throwsTags": []
  },
  {
    "containingClass": {
      "isArray": false,
      "name": "KShortestPaths",
      "qualifiedName": "org.jgrapht.alg.KShortestPaths"
    },
    "isVarArgs": false,
    "name": "assertKShortestPathsFinder",
    "paramTags": [],
    "parameters": [
      {
        "name": "graph",
        "type": {
          "isArray": false,
          "name": "Graph",
          "qualifiedName": "org.jgrapht.Graph"
        }
      },
      {
        "name": "startVertex",
        "type": {
          "isArray": false,
          "name": "Object",
          "qualifiedName": "java.lang.Object"
        }
      },
      {
        "name": "nPaths",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      },
      {
        "name": "nMaxHops",
        "type": {
          "isArray": false,
          "name": "int",
          "qualifiedName": "int"
        }
      }
    ],
    "returnType": {
      "isArray": false,
      "name": "void",
      "qualifiedName": "void"
    },
    "signature": "assertKShortestPathsFinder(org.jgrapht.Graph graph,java.lang.Object startVertex,int nPaths,int nMaxHops)",
    "targetClass": "org.jgrapht.alg.KShortestPaths",
    "throwsTags": []
  }
]