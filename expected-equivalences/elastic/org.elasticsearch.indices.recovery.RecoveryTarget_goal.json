[
  {
    "signature": "handoffPrimaryContext(org.elasticsearch.index.seqno.GlobalCheckpointTracker$PrimaryContext primaryContext)",
    "name": "handoffPrimaryContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.seqno.GlobalCheckpointTracker$PrimaryContext",
          "name": "PrimaryContext",
          "isArray": false
        },
        "name": "primaryContext"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cancel(java.lang.String reason)",
    "name": "cancel",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "reason"
      }
    ],
    "equivalence": {
      "comment": "cancel the recovery. calling this method will clean temporary files and release the store unless this object is in use (in which case it will be cleaned once all ongoing users call #decRef()  if #cancellableThreads() was used, the threads will be interrupted.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "indexTranslogOperations(java.util.List<org.elasticsearch.index.translog.Translog$Operation> operations, int totalTranslogOps)",
    "name": "indexTranslogOperations",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "operations"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "totalTranslogOps"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "resetRecovery(org.elasticsearch.common.util.CancellableThreads newTargetCancellableThreads)",
    "name": "resetRecovery",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.util.CancellableThreads",
          "name": "CancellableThreads",
          "isArray": false
        },
        "name": "newTargetCancellableThreads"
      }
    ],
    "equivalence": {
      "comment": "Closes the current recovery target and waits up to a certain timeout for resources to be freed. Returns true if resetting the recovery was successful, false if the recovery target is already cancelled / failed or marked as done.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "ensureClusterStateVersion(long clusterStateVersion)",
    "name": "ensureClusterStateVersion",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "clusterStateVersion"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "fail(org.elasticsearch.indices.recovery.RecoveryFailedException e, boolean sendShardFailure)",
    "name": "fail",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryFailedException",
          "name": "RecoveryFailedException",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "sendShardFailure"
      }
    ],
    "equivalence": {
      "comment": "fail the recovery and call listener",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "finalizeRecovery(long globalCheckpoint)",
    "name": "finalizeRecovery",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "globalCheckpoint"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getOpenIndexOutput(java.lang.String key)",
    "name": "getOpenIndexOutput",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.lucene.store.IndexOutput",
      "name": "org.apache.lucene.store.IndexOutput",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "recoveryId()",
    "name": "recoveryId",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "renameAllTempFiles()",
    "name": "renameAllTempFiles",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "translogLocation()",
    "name": "translogLocation",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.nio.file.Path",
      "name": "java.nio.file.Path",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "state()",
    "name": "state",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryState",
      "name": "org.elasticsearch.indices.recovery.RecoveryState",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "receiveFileInfo(java.util.List<java.lang.String> phase1FileNames, java.util.List<java.lang.Long> phase1FileSizes, java.util.List<java.lang.String> phase1ExistingFileNames, java.util.List<java.lang.Long> phase1ExistingFileSizes, int totalTranslogOps)",
    "name": "receiveFileInfo",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "phase1FileNames"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "phase1FileSizes"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "phase1ExistingFileNames"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "phase1ExistingFileSizes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "totalTranslogOps"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "prepareForTranslogOperations(int totalTranslogOps)",
    "name": "prepareForTranslogOperations",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "totalTranslogOps"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTempNameForFile(java.lang.String origFile)",
    "name": "getTempNameForFile",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "origFile"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeOpenIndexOutputs(java.lang.String name)",
    "name": "removeOpenIndexOutputs",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.lucene.store.IndexOutput",
      "name": "org.apache.lucene.store.IndexOutput",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "openAndPutIndexOutput(java.lang.String fileName, org.elasticsearch.index.store.StoreFileMetaData metaData, org.elasticsearch.index.store.Store store)",
    "name": "openAndPutIndexOutput",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.lucene.store.IndexOutput",
      "name": "org.apache.lucene.store.IndexOutput",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fileName"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.store.StoreFileMetaData",
          "name": "StoreFileMetaData",
          "isArray": false
        },
        "name": "metaData"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.store.Store",
          "name": "Store",
          "isArray": false
        },
        "name": "store"
      }
    ],
    "equivalence": {
      "comment": "Creates an org.apache.lucene.store.IndexOutput for the given file name. Note that the IndexOutput actually point at a temporary file.  Note: You can use #getOpenIndexOutput(String) with the same filename to retrieve the same IndexOutput at a later stage",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectID.getOpenIndexOutput(args[0]))"
    }
  },
  {
    "signature": "closeInternal()",
    "name": "closeInternal",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "shardId()",
    "name": "shardId",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.index.shard.ShardId",
      "name": "org.elasticsearch.index.shard.ShardId",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "store()",
    "name": "store",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.index.store.Store",
      "name": "org.elasticsearch.index.store.Store",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stage()",
    "name": "stage",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryState$Stage",
      "name": "org.elasticsearch.indices.recovery.RecoveryState$Stage",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setLastAccessTime()",
    "name": "setLastAccessTime",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "markAsDone()",
    "name": "markAsDone",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sourceNode()",
    "name": "sourceNode",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.cluster.node.DiscoveryNode",
      "name": "org.elasticsearch.cluster.node.DiscoveryNode",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "notifyListener(org.elasticsearch.indices.recovery.RecoveryFailedException e, boolean sendShardFailure)",
    "name": "notifyListener",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryFailedException",
          "name": "RecoveryFailedException",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "sendShardFailure"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cleanFiles(int totalTranslogOps, org.elasticsearch.index.store.Store$MetadataSnapshot sourceMetaData)",
    "name": "cleanFiles",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "totalTranslogOps"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.store.Store$MetadataSnapshot",
          "name": "MetadataSnapshot",
          "isArray": false
        },
        "name": "sourceMetaData"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeFileChunk(org.elasticsearch.index.store.StoreFileMetaData fileMetaData, long position, org.elasticsearch.common.bytes.BytesReference content, boolean lastChunk, int totalTranslogOps)",
    "name": "writeFileChunk",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.store.StoreFileMetaData",
          "name": "StoreFileMetaData",
          "isArray": false
        },
        "name": "fileMetaData"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "position"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.bytes.BytesReference",
          "name": "BytesReference",
          "isArray": false
        },
        "name": "content"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "lastChunk"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "totalTranslogOps"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.indices.recovery.RecoveryTarget(org.elasticsearch.index.shard.IndexShard indexShard, org.elasticsearch.cluster.node.DiscoveryNode sourceNode, org.elasticsearch.indices.recovery.PeerRecoveryTargetService$RecoveryListener listener, java.util.function.LongConsumer ensureClusterStateVersionCallback)",
    "name": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.index.shard.IndexShard",
          "name": "IndexShard",
          "isArray": false
        },
        "name": "indexShard"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.cluster.node.DiscoveryNode",
          "name": "DiscoveryNode",
          "isArray": false
        },
        "name": "sourceNode"
      },
      {
        "type": {
          "qualifiedName": "org.elasticsearch.indices.recovery.PeerRecoveryTargetService$RecoveryListener",
          "name": "RecoveryListener",
          "isArray": false
        },
        "name": "listener"
      },
      {
        "type": {
          "qualifiedName": "java.util.function.LongConsumer",
          "name": "LongConsumer",
          "isArray": false
        },
        "name": "ensureClusterStateVersionCallback"
      }
    ],
    "equivalence": {
      "comment": "Creates a new recovery target object that represents a recovery to the provided shard.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cancellableThreads()",
    "name": "cancellableThreads",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.util.CancellableThreads",
      "name": "org.elasticsearch.common.util.CancellableThreads",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "lastAccessTime()",
    "name": "lastAccessTime",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "indexShard()",
    "name": "indexShard",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.index.shard.IndexShard",
      "name": "org.elasticsearch.index.shard.IndexShard",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "retryCopy()",
    "name": "retryCopy",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "RecoveryTarget",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.indices.recovery.RecoveryTarget",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "name": "org.elasticsearch.indices.recovery.RecoveryTarget",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns a fresh recovery target to retry recovery from the same source node onto the same shard and using the same listener.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]